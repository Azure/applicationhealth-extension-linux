name: Go

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

env:
  ubuntu_version: ubuntu-18.04
  go_version: 1.7

jobs:
  lint_and_unit_test:
    runs-on: ${{ env.ubuntu_version }}
    steps:
    - name: Pull Repository
      uses: actions/checkout@v3
      
    - name: Setup Go Environment
      uses: actions/setup-go@v3
      with:
        go-version: ${{ env.go_version }}
    
    - name: Install golint
      run: sudo apt install golint

    - name: Formatting 
      run: test -z "$(gofmt -s -l -w $(find . -type f -name '*.go' -not -path './vendor/*') | tee /dev/stderr)"
      
    - name: Lint
      run: test -z "$(golint . | tee /dev/stderr)"
    
    - name: Vet
      run: test -z "$(go vet -v $(go list ./... | grep -v '/vendor/') | tee /dev/stderr)"
    
    - name: Unit Tests
      run: go list ./... | grep -v '/vendor/' | xargs go test -v -cover
      
  build:
    runs-on: ${{ env.ubuntu_version }}
    steps:
    - name: Pull Repository
    - uses: actions/checkout@v3

    - name: Setup Go Environment
      uses: actions/setup-go@v3
      with:
        go-version: ${{ env.go_version }}

    - name: Install Bats
    - run: sudo add-apt-repository ppa:duggan/bats --yes
    - run: sudo apt-get update -qq
    - run: sudo apt-get install -qq bats
    
    - name: Install Other Dependencies
    - run: curl -sL https://deb.nodesource.com/setup_6.x | sudo bash -
    - run: sudo apt-get install -qqy nodejs
    - run: sudo apt install npm
    - run: curl -sL https://aka.ms/InstallAzureCLIDeb | sudo bash -
    
    - name: Get Go Packages
    - run: go get -u github.com/ahmetalpbalkan/govvv
    - run: go get -u github.com/tools/godep
    
    - name: Restore Go Packages
    - run: godep restore
    
    - name: Install Docker
    - run: sudo apt install docker.io
    
    - name: Build Binaries
    - run: make binary
    
    - name: Generate Webserver Credentials
    - run: openssl rand -out ~/.rnd 2048
    - run: openssl genrsa -out testbin/webserverkey.pem 2048
    - run: openssl req -new -x509 -sha256 -key testbin/webserverkey.pem -out testbin/webservercert.pem -days 3650 -subj '/CN=www.contoso.com/O=Contoso LTD./C=US'
    
    - name: Run Integration Tests
      run: sudo bats integration-test/test
