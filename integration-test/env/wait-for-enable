#!/bin/bash

# This script exists because applicationhealth-shim will detach the enable command
# into background and when that happens the applicationhealth shim will exit,
# causing test container to exit as its entrypoint has exited. So we use this
# to wait indefinitely until enable background process disappears from ps output
# or the status file indicates that the extension has provisioned successfully.

log(){ echo "[wait] time=$(date --rfc-3339=s | sed 's/ /T/') $@">&2; }

log "bar entry"
waitonstatus="n"
for a
do
    if [ $a = 'status' ]; then
        log "waiting on status"
        waitonstatus="y"
    fi
done

sleep 1
bin="bin/applicationhealth-extension"
while true; do
    # get running processes removing sh which is the entry command and has a bunch of commands in it
    # this allows the statements below to work in native linux and on mac silicon where rosetta will
    # show up so the format of ps aux changes a bit and more restrictive regexes don't find the data
    # removing the entrypoint command allows the regexes to be less restrictive.
    out="$(ps aux | grep -v sh)"
    if [ $waitonstatus == "y" ]; then
        log "waiting on successful status"
        if grep -q 'success' /var/lib/waagent/Extension/status/0.status; then
            log "'$bin' indicated a successful state"
            exit 0
        fi
        sleep .5
    elif  [[ "$1" != "webserverexit" && "$out" == **"$bin"** ]]; then
        if grep -q 'success' /var/lib/waagent/Extension/status/0.status; then
            log "'$bin' indicated a successful state"
            exit 0
        fi
        sleep .5
    else
        if [[ "$1" != "webserverexit" ]]; then
            log "'$bin' process exited"
            exit 0
        elif [[ "$out" != **"webserver -args="** ]]; then
            log "webserver exited"
            exit 0
        fi 
    fi
done
